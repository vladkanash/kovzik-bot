buildscript {
    ext.kotlin_version = '1.5.20'
    ext.fuel_version = '2.3.1'
}

plugins {
    id("org.jetbrains.kotlin.jvm") version "$kotlin_version"
    id("org.jetbrains.kotlin.plugin.serialization") version "$kotlin_version"
}

group = "org.vladkanash"
version = "0.1.0"

configurations {
    invoker
}

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
}

dependencies {
    implementation("org.jetbrains.kotlin:kotlin-stdlib")
    implementation("org.jetbrains.kotlinx:kotlinx-datetime:0.2.1")
    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.2.2")

    implementation 'io.github.kotlin-telegram-bot.kotlin-telegram-bot:telegram:6.0.4'
    implementation 'com.google.cloud.functions:functions-framework-api:1.0.1'
    implementation 'com.google.cloud:google-cloudevent-types:0.3.0'

    implementation "com.github.kittinunf.fuel:fuel:$fuel_version"
    implementation "com.github.kittinunf.fuel:fuel-kotlinx-serialization:$fuel_version"

    invoker 'com.google.cloud.functions.invoker:java-function-invoker:1.0.0-alpha-2-rc5'
}

task runFunction(type: JavaExec) {
    main = 'com.google.cloud.functions.invoker.runner.Invoker'
    classpath = configurations.invoker
    inputs.files(configurations.runtimeClasspath, sourceSets.main.output)
    args(
            '--target', project.findProperty('run.functionTarget') ?: '',
            '--port', project.findProperty('run.port') ?: 8080
    )
    doFirst {
        args(['--classpath', files(configurations.runtimeClasspath, sourceSets.main.output).asPath])
    }
}

task deployFunction(type: Exec) {
    workingDir './'
    commandLine 'cmd', 'gcloud', 'functions', "kovzik-bot-publisher" , 'deploy', '--entry-point', 'org.vladkanash.publisher.Publisher'
}
